name: Build

on: 
    push:
        branches: [ shell ]
    pull_request:
        branches: [ shell ]
    workflow_dispatch:


jobs:
  build_wheels:
    name: Build wheel for cp${{ matrix.python }}-${{ matrix.platform_id }}-${{ matrix.manylinux_image }}
    runs-on: ${{ matrix.buildplat[0] }}
    strategy:
      # Ensure that a wheel builder finishes even if another fails
      fail-fast: false
      matrix:
        buildplat:
          - [ubuntu-latest, manylinux_x86_64]
          - [macos-latest, macosx_*]
          - [windows-latest, win_amd64]
          - [windows-latest, win32]
        python: ["cp38", "cp39", "cp310", "pp38"]
        
        exclude:
          # Don't build PyPy 32-bit windows
          - buildplat: [windows-latest, win32]
            python: "pp38"
          - buildplat: [windows-latest, win32]
            python: "pp39"
          - buildplat: [windows-latest, win32]
            python: "cp310"

    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'  # update once build dependencies are available

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.5.0
        env:
          CIBW_BUILD: ${{ matrix.python }}-${{ matrix.buildplat[1] }}
          CIBW_ARCHS: all
          CIBW_BEFORE_BUILD_WINDOWS: "pip install delvewheel"
          CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: "delvewheel repair -w {dest_dir} {wheel}"
          
          
      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
          
          
  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz
